// Limits Members
// VK 1.0
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxImageDimension1D = impl::get_or_default_maxImageDimension1D<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxImageDimension2D = impl::get_or_default_maxImageDimension2D<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxImageDimension3D = impl::get_or_default_maxImageDimension3D<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxImageDimensionCube = impl::get_or_default_maxImageDimensionCube<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxImageArrayLayers = impl::get_or_default_maxImageArrayLayers<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxBufferViewTexels = impl::get_or_default_maxBufferViewTexels<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxUBOSize = impl::get_or_default_maxUBOSize<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxSSBOSize = impl::get_or_default_maxSSBOSize<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxPushConstantsSize = impl::get_or_default_maxPushConstantsSize<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxMemoryAllocationCount = impl::get_or_default_maxMemoryAllocationCount<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxSamplerAllocationCount = impl::get_or_default_maxSamplerAllocationCount<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t bufferImageGranularity = impl::get_or_default_bufferImageGranularity<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint32_t maxPerStageDescriptorSamplers = impl::get_or_default_maxPerStageDescriptorSamplers<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxPerStageDescriptorUBOs = impl::get_or_default_maxPerStageDescriptorUBOs<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxPerStageDescriptorSSBOs = impl::get_or_default_maxPerStageDescriptorSSBOs<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxPerStageDescriptorImages = impl::get_or_default_maxPerStageDescriptorImages<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxPerStageDescriptorStorageImages = impl::get_or_default_maxPerStageDescriptorStorageImages<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxPerStageDescriptorInputAttachments = impl::get_or_default_maxPerStageDescriptorInputAttachments<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxPerStageResources = impl::get_or_default_maxPerStageResources<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetSamplers = impl::get_or_default_maxDescriptorSetSamplers<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetUBOs = impl::get_or_default_maxDescriptorSetUBOs<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetDynamicOffsetUBOs = impl::get_or_default_maxDescriptorSetDynamicOffsetUBOs<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetSSBOs = impl::get_or_default_maxDescriptorSetSSBOs<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetDynamicOffsetSSBOs = impl::get_or_default_maxDescriptorSetDynamicOffsetSSBOs<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetImages = impl::get_or_default_maxDescriptorSetImages<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetStorageImages = impl::get_or_default_maxDescriptorSetStorageImages<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetInputAttachments = impl::get_or_default_maxDescriptorSetInputAttachments<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint16_t maxVertexOutputComponents = impl::get_or_default_maxVertexOutputComponents<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint16_t maxTessellationGenerationLevel = impl::get_or_default_maxTessellationGenerationLevel<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxTessellationPatchSize = impl::get_or_default_maxTessellationPatchSize<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxTessellationControlPerVertexInputComponents = impl::get_or_default_maxTessellationControlPerVertexInputComponents<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxTessellationControlPerVertexOutputComponents = impl::get_or_default_maxTessellationControlPerVertexOutputComponents<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxTessellationControlPerPatchOutputComponents = impl::get_or_default_maxTessellationControlPerPatchOutputComponents<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxTessellationControlTotalOutputComponents = impl::get_or_default_maxTessellationControlTotalOutputComponents<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxTessellationEvaluationInputComponents = impl::get_or_default_maxTessellationEvaluationInputComponents<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxTessellationEvaluationOutputComponents = impl::get_or_default_maxTessellationEvaluationOutputComponents<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint16_t maxGeometryShaderInvocations = impl::get_or_default_maxGeometryShaderInvocations<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxGeometryInputComponents = impl::get_or_default_maxGeometryInputComponents<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxGeometryOutputComponents = impl::get_or_default_maxGeometryOutputComponents<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxGeometryOutputVertices = impl::get_or_default_maxGeometryOutputVertices<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxGeometryTotalOutputComponents = impl::get_or_default_maxGeometryTotalOutputComponents<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint32_t maxFragmentInputComponents = impl::get_or_default_maxFragmentInputComponents<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxFragmentOutputAttachments = impl::get_or_default_maxFragmentOutputAttachments<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxFragmentDualSrcAttachments = impl::get_or_default_maxFragmentDualSrcAttachments<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxFragmentCombinedOutputResources = impl::get_or_default_maxFragmentCombinedOutputResources<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint32_t maxComputeSharedMemorySize = impl::get_or_default_maxComputeSharedMemorySize<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxComputeWorkGroupCountX = impl::get_or_default_maxComputeWorkGroupCountX<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxComputeWorkGroupCountY = impl::get_or_default_maxComputeWorkGroupCountY<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxComputeWorkGroupCountZ = impl::get_or_default_maxComputeWorkGroupCountZ<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxComputeWorkGroupInvocations = impl::get_or_default_maxComputeWorkGroupInvocations<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxWorkgroupSizeX = impl::get_or_default_maxWorkgroupSizeX<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxWorkgroupSizeY = impl::get_or_default_maxWorkgroupSizeY<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxWorkgroupSizeZ = impl::get_or_default_maxWorkgroupSizeZ<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint8_t subPixelPrecisionBits = impl::get_or_default_subPixelPrecisionBits<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint8_t subTexelPrecisionBits = impl::get_or_default_subTexelPrecisionBits<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint8_t mipmapPrecisionBits = impl::get_or_default_mipmapPrecisionBits<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDrawIndirectCount = impl::get_or_default_maxDrawIndirectCount<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE float maxSamplerLodBias = impl::get_or_default_maxSamplerLodBias<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint8_t maxSamplerAnisotropyLog2 = impl::get_or_default_maxSamplerAnisotropyLog2<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint8_t maxViewports = impl::get_or_default_maxViewports<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxViewportDimsX = impl::get_or_default_maxViewportDimsX<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t maxViewportDimsY = impl::get_or_default_maxViewportDimsY<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE float viewportBoundsRangeMin = impl::get_or_default_viewportBoundsRangeMin<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE float viewportBoundsRangeMax = impl::get_or_default_viewportBoundsRangeMax<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t viewportSubPixelBits = impl::get_or_default_viewportSubPixelBits<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint16_t minMemoryMapAlignment = impl::get_or_default_minMemoryMapAlignment<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t bufferViewAlignment = impl::get_or_default_bufferViewAlignment<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t minUBOAlignment = impl::get_or_default_minUBOAlignment<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t minSSBOAlignment = impl::get_or_default_minSSBOAlignment<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE int8_t minTexelOffset = impl::get_or_default_minTexelOffset<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint8_t maxTexelOffset = impl::get_or_default_maxTexelOffset<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE int8_t minTexelGatherOffset = impl::get_or_default_minTexelGatherOffset<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint8_t maxTexelGatherOffset = impl::get_or_default_maxTexelGatherOffset<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE float minInterpolationOffset = impl::get_or_default_minInterpolationOffset<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE float maxInterpolationOffset = impl::get_or_default_maxInterpolationOffset<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint8_t subPixelInterpolationOffsetBits = impl::get_or_default_subPixelInterpolationOffsetBits<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint32_t maxFramebufferWidth = impl::get_or_default_maxFramebufferWidth<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxFramebufferHeight = impl::get_or_default_maxFramebufferHeight<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxFramebufferLayers = impl::get_or_default_maxFramebufferLayers<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint8_t maxColorAttachments = impl::get_or_default_maxColorAttachments<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint8_t maxSampleMaskWords = impl::get_or_default_maxSampleMaskWords<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE float timestampPeriodInNanoSeconds = impl::get_or_default_timestampPeriodInNanoSeconds<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint8_t maxClipDistances = impl::get_or_default_maxClipDistances<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint8_t maxCullDistances = impl::get_or_default_maxCullDistances<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint8_t maxCombinedClipAndCullDistances = impl::get_or_default_maxCombinedClipAndCullDistances<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint32_t discreteQueuePriorities = impl::get_or_default_discreteQueuePriorities<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE float pointSizeRangeMin = impl::get_or_default_pointSizeRangeMin<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE float pointSizeRangeMax = impl::get_or_default_pointSizeRangeMax<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE float lineWidthRangeMin = impl::get_or_default_lineWidthRangeMin<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE float lineWidthRangeMax = impl::get_or_default_lineWidthRangeMax<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE float pointSizeGranularity = impl::get_or_default_pointSizeGranularity<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE float lineWidthGranularity = impl::get_or_default_lineWidthGranularity<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool strictLines = impl::get_or_default_strictLines<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool standardSampleLocations = impl::get_or_default_standardSampleLocations<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint16_t optimalBufferCopyOffsetAlignment = impl::get_or_default_optimalBufferCopyOffsetAlignment<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t optimalBufferCopyRowPitchAlignment = impl::get_or_default_optimalBufferCopyRowPitchAlignment<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint16_t nonCoherentAtomSize = impl::get_or_default_nonCoherentAtomSize<device_capabilities>::value;

// VK 1.1
NBL_CONSTEXPR_STATIC_INLINE uint16_t subgroupSize = impl::get_or_default_subgroupSize<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE shaderStage subgroupOpsShaderStages = impl::get_or_default_subgroupOpsShaderStages<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderSubgroupClustered = impl::get_or_default_shaderSubgroupClustered<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderSubgroupArithmetic = impl::get_or_default_shaderSubgroupArithmetic<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderSubgroupQuad = impl::get_or_default_shaderSubgroupQuad<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderSubgroupQuadAllStages = impl::get_or_default_shaderSubgroupQuadAllStages<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE E_POINT_CLIPPING_BEHAVIOR pointClippingBehavior = impl::get_or_default_pointClippingBehavior<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint8_t maxMultiviewViewCount = impl::get_or_default_maxMultiviewViewCount<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxMultiviewInstanceIndex = impl::get_or_default_maxMultiviewInstanceIndex<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint32_t maxPerSetDescriptors = impl::get_or_default_maxPerSetDescriptors<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint64_t maxMemoryAllocationSize = impl::get_or_default_maxMemoryAllocationSize<device_capabilities>::value;

// VK 1.2
NBL_CONSTEXPR_STATIC_INLINE bool shaderSignedZeroInfNanPreserveFloat64 = impl::get_or_default_shaderSignedZeroInfNanPreserveFloat64<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderDenormPreserveFloat16 = impl::get_or_default_shaderDenormPreserveFloat16<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderDenormPreserveFloat32 = impl::get_or_default_shaderDenormPreserveFloat32<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderDenormPreserveFloat64 = impl::get_or_default_shaderDenormPreserveFloat64<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderDenormFlushToZeroFloat16 = impl::get_or_default_shaderDenormFlushToZeroFloat16<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderDenormFlushToZeroFloat32 = impl::get_or_default_shaderDenormFlushToZeroFloat32<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderDenormFlushToZeroFloat64 = impl::get_or_default_shaderDenormFlushToZeroFloat64<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderRoundingModeRTEFloat16 = impl::get_or_default_shaderRoundingModeRTEFloat16<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderRoundingModeRTEFloat32 = impl::get_or_default_shaderRoundingModeRTEFloat32<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderRoundingModeRTEFloat64 = impl::get_or_default_shaderRoundingModeRTEFloat64<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderRoundingModeRTZFloat16 = impl::get_or_default_shaderRoundingModeRTZFloat16<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderRoundingModeRTZFloat32 = impl::get_or_default_shaderRoundingModeRTZFloat32<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderRoundingModeRTZFloat64 = impl::get_or_default_shaderRoundingModeRTZFloat64<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint32_t maxUpdateAfterBindDescriptorsInAllPools = impl::get_or_default_maxUpdateAfterBindDescriptorsInAllPools<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderUniformBufferArrayNonUniformIndexingNative = impl::get_or_default_shaderUniformBufferArrayNonUniformIndexingNative<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderSampledImageArrayNonUniformIndexingNative = impl::get_or_default_shaderSampledImageArrayNonUniformIndexingNative<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderStorageBufferArrayNonUniformIndexingNative = impl::get_or_default_shaderStorageBufferArrayNonUniformIndexingNative<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderStorageImageArrayNonUniformIndexingNative = impl::get_or_default_shaderStorageImageArrayNonUniformIndexingNative<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderInputAttachmentArrayNonUniformIndexingNative = impl::get_or_default_shaderInputAttachmentArrayNonUniformIndexingNative<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool robustBufferAccessUpdateAfterBind = impl::get_or_default_robustBufferAccessUpdateAfterBind<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool quadDivergentImplicitLod = impl::get_or_default_quadDivergentImplicitLod<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxPerStageDescriptorUpdateAfterBindSamplers = impl::get_or_default_maxPerStageDescriptorUpdateAfterBindSamplers<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxPerStageDescriptorUpdateAfterBindUBOs = impl::get_or_default_maxPerStageDescriptorUpdateAfterBindUBOs<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxPerStageDescriptorUpdateAfterBindSSBOs = impl::get_or_default_maxPerStageDescriptorUpdateAfterBindSSBOs<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxPerStageDescriptorUpdateAfterBindImages = impl::get_or_default_maxPerStageDescriptorUpdateAfterBindImages<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxPerStageDescriptorUpdateAfterBindStorageImages = impl::get_or_default_maxPerStageDescriptorUpdateAfterBindStorageImages<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxPerStageDescriptorUpdateAfterBindInputAttachments = impl::get_or_default_maxPerStageDescriptorUpdateAfterBindInputAttachments<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxPerStageUpdateAfterBindResources = impl::get_or_default_maxPerStageUpdateAfterBindResources<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetUpdateAfterBindSamplers = impl::get_or_default_maxDescriptorSetUpdateAfterBindSamplers<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetUpdateAfterBindUBOs = impl::get_or_default_maxDescriptorSetUpdateAfterBindUBOs<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetUpdateAfterBindDynamicOffsetUBOs = impl::get_or_default_maxDescriptorSetUpdateAfterBindDynamicOffsetUBOs<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetUpdateAfterBindSSBOs = impl::get_or_default_maxDescriptorSetUpdateAfterBindSSBOs<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetUpdateAfterBindDynamicOffsetSSBOs = impl::get_or_default_maxDescriptorSetUpdateAfterBindDynamicOffsetSSBOs<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetUpdateAfterBindImages = impl::get_or_default_maxDescriptorSetUpdateAfterBindImages<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetUpdateAfterBindStorageImages = impl::get_or_default_maxDescriptorSetUpdateAfterBindStorageImages<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetUpdateAfterBindInputAttachments = impl::get_or_default_maxDescriptorSetUpdateAfterBindInputAttachments<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE modeFlags supportedDepthResolveModes = impl::get_or_default_supportedDepthResolveModes<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE modeFlags supportedStencilResolveModes = impl::get_or_default_supportedStencilResolveModes<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool independentResolveNone = impl::get_or_default_independentResolveNone<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool independentResolve = impl::get_or_default_independentResolve<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool filterMinmaxImageComponentMapping = impl::get_or_default_filterMinmaxImageComponentMapping<device_capabilities>::value;

// VK 1.3
NBL_CONSTEXPR_STATIC_INLINE uint8_t minSubgroupSize = impl::get_or_default_minSubgroupSize<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint8_t maxSubgroupSize = impl::get_or_default_maxSubgroupSize<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxComputeWorkgroupSubgroups = impl::get_or_default_maxComputeWorkgroupSubgroups<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE shaderStage requiredSubgroupSizeStages = impl::get_or_default_requiredSubgroupSizeStages<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool integerDotProduct8BitUnsignedAccelerated = impl::get_or_default_integerDotProduct8BitUnsignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProduct8BitSignedAccelerated = impl::get_or_default_integerDotProduct8BitSignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProduct8BitMixedSignednessAccelerated = impl::get_or_default_integerDotProduct8BitMixedSignednessAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProduct4x8BitPackedUnsignedAccelerated = impl::get_or_default_integerDotProduct4x8BitPackedUnsignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProduct4x8BitPackedSignedAccelerated = impl::get_or_default_integerDotProduct4x8BitPackedSignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProduct4x8BitPackedMixedSignednessAccelerated = impl::get_or_default_integerDotProduct4x8BitPackedMixedSignednessAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProduct16BitUnsignedAccelerated = impl::get_or_default_integerDotProduct16BitUnsignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProduct16BitSignedAccelerated = impl::get_or_default_integerDotProduct16BitSignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProduct16BitMixedSignednessAccelerated = impl::get_or_default_integerDotProduct16BitMixedSignednessAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProduct32BitUnsignedAccelerated = impl::get_or_default_integerDotProduct32BitUnsignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProduct32BitSignedAccelerated = impl::get_or_default_integerDotProduct32BitSignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProduct32BitMixedSignednessAccelerated = impl::get_or_default_integerDotProduct32BitMixedSignednessAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProduct64BitUnsignedAccelerated = impl::get_or_default_integerDotProduct64BitUnsignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProduct64BitSignedAccelerated = impl::get_or_default_integerDotProduct64BitSignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProduct64BitMixedSignednessAccelerated = impl::get_or_default_integerDotProduct64BitMixedSignednessAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProductAccumulatingSaturating8BitUnsignedAccelerated = impl::get_or_default_integerDotProductAccumulatingSaturating8BitUnsignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProductAccumulatingSaturating8BitSignedAccelerated = impl::get_or_default_integerDotProductAccumulatingSaturating8BitSignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated = impl::get_or_default_integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated = impl::get_or_default_integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated = impl::get_or_default_integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated = impl::get_or_default_integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProductAccumulatingSaturating16BitUnsignedAccelerated = impl::get_or_default_integerDotProductAccumulatingSaturating16BitUnsignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProductAccumulatingSaturating16BitSignedAccelerated = impl::get_or_default_integerDotProductAccumulatingSaturating16BitSignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated = impl::get_or_default_integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProductAccumulatingSaturating32BitUnsignedAccelerated = impl::get_or_default_integerDotProductAccumulatingSaturating32BitUnsignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProductAccumulatingSaturating32BitSignedAccelerated = impl::get_or_default_integerDotProductAccumulatingSaturating32BitSignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated = impl::get_or_default_integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProductAccumulatingSaturating64BitUnsignedAccelerated = impl::get_or_default_integerDotProductAccumulatingSaturating64BitUnsignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProductAccumulatingSaturating64BitSignedAccelerated = impl::get_or_default_integerDotProductAccumulatingSaturating64BitSignedAccelerated<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated = impl::get_or_default_integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint64_t storageTexelBufferOffsetAlignmentBytes = impl::get_or_default_storageTexelBufferOffsetAlignmentBytes<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint64_t uniformTexelBufferOffsetAlignmentBytes = impl::get_or_default_uniformTexelBufferOffsetAlignmentBytes<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint64_t maxBufferSize = impl::get_or_default_maxBufferSize<device_capabilities>::value;

// Nabla Core Extensions
NBL_CONSTEXPR_STATIC_INLINE uint32_t minImportedHostPointerAlignment = impl::get_or_default_minImportedHostPointerAlignment<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool shaderBufferFloat32AtomicAdd = impl::get_or_default_shaderBufferFloat32AtomicAdd<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderBufferFloat64Atomics = impl::get_or_default_shaderBufferFloat64Atomics<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderBufferFloat64AtomicAdd = impl::get_or_default_shaderBufferFloat64AtomicAdd<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderSharedFloat32AtomicAdd = impl::get_or_default_shaderSharedFloat32AtomicAdd<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderSharedFloat64Atomics = impl::get_or_default_shaderSharedFloat64Atomics<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderSharedFloat64AtomicAdd = impl::get_or_default_shaderSharedFloat64AtomicAdd<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderImageFloat32AtomicAdd = impl::get_or_default_shaderImageFloat32AtomicAdd<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool sparseImageFloat32Atomics = impl::get_or_default_sparseImageFloat32Atomics<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool sparseImageFloat32AtomicAdd = impl::get_or_default_sparseImageFloat32AtomicAdd<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint64_t robustStorageBufferAccessSizeAlignment = impl::get_or_default_robustStorageBufferAccessSizeAlignment<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint64_t robustUniformBufferAccessSizeAlignment = impl::get_or_default_robustUniformBufferAccessSizeAlignment<device_capabilities>::value;

// Extensions
NBL_CONSTEXPR_STATIC_INLINE bool shaderTrinaryMinmax = impl::get_or_default_shaderTrinaryMinmax<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool shaderExplicitVertexParameter = impl::get_or_default_shaderExplicitVertexParameter<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool gpuShaderHalfFloatAMD = impl::get_or_default_gpuShaderHalfFloatAMD<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool shaderImageLoadStoreLod = impl::get_or_default_shaderImageLoadStoreLod<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool displayTiming = impl::get_or_default_displayTiming<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDiscardRectangles = impl::get_or_default_maxDiscardRectangles<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE float primitiveOverestimationSize = impl::get_or_default_primitiveOverestimationSize<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE float maxExtraPrimitiveOverestimationSize = impl::get_or_default_maxExtraPrimitiveOverestimationSize<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE float extraPrimitiveOverestimationSizeGranularity = impl::get_or_default_extraPrimitiveOverestimationSizeGranularity<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool primitiveUnderestimation = impl::get_or_default_primitiveUnderestimation<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool conservativePointAndLineRasterization = impl::get_or_default_conservativePointAndLineRasterization<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool degenerateTrianglesRasterized = impl::get_or_default_degenerateTrianglesRasterized<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool degenerateLinesRasterized = impl::get_or_default_degenerateLinesRasterized<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool fullyCoveredFragmentShaderInputVariable = impl::get_or_default_fullyCoveredFragmentShaderInputVariable<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool conservativeRasterizationPostDepthCoverage = impl::get_or_default_conservativeRasterizationPostDepthCoverage<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool queueFamilyForeign = impl::get_or_default_queueFamilyForeign<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool shaderStencilExport = impl::get_or_default_shaderStencilExport<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool variableSampleLocations = impl::get_or_default_variableSampleLocations<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint8_t sampleLocationSubPixelBits = impl::get_or_default_sampleLocationSubPixelBits<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE sampleCountFlags sampleLocationSampleCounts = impl::get_or_default_sampleLocationSampleCounts<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxSampleLocationGridSizeX = impl::get_or_default_maxSampleLocationGridSizeX<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxSampleLocationGridSizeY = impl::get_or_default_maxSampleLocationGridSizeY<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE float sampleLocationCoordinateRangeMin = impl::get_or_default_sampleLocationCoordinateRangeMin<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE float sampleLocationCoordinateRangeMax = impl::get_or_default_sampleLocationCoordinateRangeMax<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint64_t maxAccelerationStructureGeometryCount = impl::get_or_default_maxAccelerationStructureGeometryCount<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint64_t maxAccelerationStructureInstanceCount = impl::get_or_default_maxAccelerationStructureInstanceCount<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint64_t maxAccelerationStructurePrimitiveCount = impl::get_or_default_maxAccelerationStructurePrimitiveCount<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint64_t maxPerStageDescriptorAccelerationStructures = impl::get_or_default_maxPerStageDescriptorAccelerationStructures<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint64_t maxPerStageDescriptorUpdateAfterBindAccelerationStructures = impl::get_or_default_maxPerStageDescriptorUpdateAfterBindAccelerationStructures<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint64_t maxDescriptorSetAccelerationStructures = impl::get_or_default_maxDescriptorSetAccelerationStructures<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint64_t maxDescriptorSetUpdateAfterBindAccelerationStructures = impl::get_or_default_maxDescriptorSetUpdateAfterBindAccelerationStructures<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint64_t minAccelerationStructureScratchOffsetAlignment = impl::get_or_default_minAccelerationStructureScratchOffsetAlignment<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint32_t maxRayRecursionDepth = impl::get_or_default_maxRayRecursionDepth<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxShaderGroupStride = impl::get_or_default_maxShaderGroupStride<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t shaderGroupBaseAlignment = impl::get_or_default_shaderGroupBaseAlignment<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxRayDispatchInvocationCount = impl::get_or_default_maxRayDispatchInvocationCount<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t shaderGroupHandleAlignment = impl::get_or_default_shaderGroupHandleAlignment<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxRayHitAttributeSize = impl::get_or_default_maxRayHitAttributeSize<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool shaderSMBuiltins = impl::get_or_default_shaderSMBuiltins<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool postDepthCoverage = impl::get_or_default_postDepthCoverage<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool computeDerivativeGroupQuads = impl::get_or_default_computeDerivativeGroupQuads<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool computeDerivativeGroupLinear = impl::get_or_default_computeDerivativeGroupLinear<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool imageFootprint = impl::get_or_default_imageFootprint<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint32_t pciDomain = impl::get_or_default_pciDomain<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t pciBus = impl::get_or_default_pciBus<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t pciDevice = impl::get_or_default_pciDevice<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t pciFunction = impl::get_or_default_pciFunction<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint32_t minFragmentDensityTexelSizeX = impl::get_or_default_minFragmentDensityTexelSizeX<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t minFragmentDensityTexelSizeY = impl::get_or_default_minFragmentDensityTexelSizeY<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxFragmentDensityTexelSizeX = impl::get_or_default_maxFragmentDensityTexelSizeX<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxFragmentDensityTexelSizeY = impl::get_or_default_maxFragmentDensityTexelSizeY<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool fragmentDensityInvocations = impl::get_or_default_fragmentDensityInvocations<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool decorateString = impl::get_or_default_decorateString<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool shaderImageInt64Atomics = impl::get_or_default_shaderImageInt64Atomics<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool sparseImageInt64Atomics = impl::get_or_default_sparseImageInt64Atomics<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE uint32_t lineSubPixelPrecisionBits = impl::get_or_default_lineSubPixelPrecisionBits<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool shaderBufferFloat16Atomics = impl::get_or_default_shaderBufferFloat16Atomics<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderBufferFloat16AtomicAdd = impl::get_or_default_shaderBufferFloat16AtomicAdd<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderBufferFloat16AtomicMinMax = impl::get_or_default_shaderBufferFloat16AtomicMinMax<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderBufferFloat32AtomicMinMax = impl::get_or_default_shaderBufferFloat32AtomicMinMax<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderBufferFloat64AtomicMinMax = impl::get_or_default_shaderBufferFloat64AtomicMinMax<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderSharedFloat16Atomics = impl::get_or_default_shaderSharedFloat16Atomics<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderSharedFloat16AtomicAdd = impl::get_or_default_shaderSharedFloat16AtomicAdd<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderSharedFloat16AtomicMinMax = impl::get_or_default_shaderSharedFloat16AtomicMinMax<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderSharedFloat32AtomicMinMax = impl::get_or_default_shaderSharedFloat32AtomicMinMax<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderSharedFloat64AtomicMinMax = impl::get_or_default_shaderSharedFloat64AtomicMinMax<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderImageFloat32AtomicMinMax = impl::get_or_default_shaderImageFloat32AtomicMinMax<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool sparseImageFloat32AtomicMinMax = impl::get_or_default_sparseImageFloat32AtomicMinMax<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool deviceMemoryReport = impl::get_or_default_deviceMemoryReport<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool shaderNonSemanticInfo = impl::get_or_default_shaderNonSemanticInfo<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool fragmentShaderBarycentric = impl::get_or_default_fragmentShaderBarycentric<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool shaderSubgroupUniformControlFlow = impl::get_or_default_shaderSubgroupUniformControlFlow<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool subsampledLoads = impl::get_or_default_subsampledLoads<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool subsampledCoarseReconstructionEarlyAccess = impl::get_or_default_subsampledCoarseReconstructionEarlyAccess<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxSubsampledArrayLayers = impl::get_or_default_maxSubsampledArrayLayers<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxDescriptorSetSubsampledSamplers = impl::get_or_default_maxDescriptorSetSubsampledSamplers<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool workgroupMemoryExplicitLayout = impl::get_or_default_workgroupMemoryExplicitLayout<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool workgroupMemoryExplicitLayoutScalarBlockLayout = impl::get_or_default_workgroupMemoryExplicitLayoutScalarBlockLayout<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool workgroupMemoryExplicitLayout8BitAccess = impl::get_or_default_workgroupMemoryExplicitLayout8BitAccess<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool workgroupMemoryExplicitLayout16BitAccess = impl::get_or_default_workgroupMemoryExplicitLayout16BitAccess<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool colorWriteEnable = impl::get_or_default_colorWriteEnable<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE shaderStage cooperativeMatrixSupportedStages = impl::get_or_default_cooperativeMatrixSupportedStages<device_capabilities>::value;

// Nabla
NBL_CONSTEXPR_STATIC_INLINE uint32_t computeUnits = impl::get_or_default_computeUnits<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool dispatchBase = impl::get_or_default_dispatchBase<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool allowCommandBufferQueryCopies = impl::get_or_default_allowCommandBufferQueryCopies<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxOptimallyResidentWorkgroupInvocations = impl::get_or_default_maxOptimallyResidentWorkgroupInvocations<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE uint32_t maxResidentInvocations = impl::get_or_default_maxResidentInvocations<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE spirvVersion spirvVersion = impl::get_or_default_spirvVersion<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool logicOp = impl::get_or_default_logicOp<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool vertexPipelineStoresAndAtomics = impl::get_or_default_vertexPipelineStoresAndAtomics<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool fragmentStoresAndAtomics = impl::get_or_default_fragmentStoresAndAtomics<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderTessellationAndGeometryPointSize = impl::get_or_default_shaderTessellationAndGeometryPointSize<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderStorageImageMultisample = impl::get_or_default_shaderStorageImageMultisample<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderStorageImageReadWithoutFormat = impl::get_or_default_shaderStorageImageReadWithoutFormat<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderStorageImageArrayDynamicIndexing = impl::get_or_default_shaderStorageImageArrayDynamicIndexing<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderFloat64 = impl::get_or_default_shaderFloat64<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool variableMultisampleRate = impl::get_or_default_variableMultisampleRate<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool storagePushConstant16 = impl::get_or_default_storagePushConstant16<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool storageInputOutput16 = impl::get_or_default_storageInputOutput16<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool multiviewGeometryShader = impl::get_or_default_multiviewGeometryShader<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool multiviewTessellationShader = impl::get_or_default_multiviewTessellationShader<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool drawIndirectCount = impl::get_or_default_drawIndirectCount<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool storagePushConstant8 = impl::get_or_default_storagePushConstant8<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderBufferInt64Atomics = impl::get_or_default_shaderBufferInt64Atomics<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderSharedInt64Atomics = impl::get_or_default_shaderSharedInt64Atomics<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderFloat16 = impl::get_or_default_shaderFloat16<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderInputAttachmentArrayDynamicIndexing = impl::get_or_default_shaderInputAttachmentArrayDynamicIndexing<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderUniformBufferArrayNonUniformIndexing = impl::get_or_default_shaderUniformBufferArrayNonUniformIndexing<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderInputAttachmentArrayNonUniformIndexing = impl::get_or_default_shaderInputAttachmentArrayNonUniformIndexing<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool descriptorBindingUniformBufferUpdateAfterBind = impl::get_or_default_descriptorBindingUniformBufferUpdateAfterBind<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool samplerFilterMinmax = impl::get_or_default_samplerFilterMinmax<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool vulkanMemoryModelAvailabilityVisibilityChains = impl::get_or_default_vulkanMemoryModelAvailabilityVisibilityChains<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderOutputViewportIndex = impl::get_or_default_shaderOutputViewportIndex<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderOutputLayer = impl::get_or_default_shaderOutputLayer<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderDemoteToHelperInvocation = impl::get_or_default_shaderDemoteToHelperInvocation<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderTerminateInvocation = impl::get_or_default_shaderTerminateInvocation<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderZeroInitializeWorkgroupMemory = impl::get_or_default_shaderZeroInitializeWorkgroupMemory<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderDeviceClock = impl::get_or_default_shaderDeviceClock<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderSubgroupClock = impl::get_or_default_shaderSubgroupClock<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool imageFootPrint = impl::get_or_default_imageFootPrint<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderIntegerFunctions2 = impl::get_or_default_shaderIntegerFunctions2<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderEarlyAndLateFragmentTests = impl::get_or_default_shaderEarlyAndLateFragmentTests<device_capabilities>::value;

// Features Members
// VK 1.0
NBL_CONSTEXPR_STATIC_INLINE bool robustBufferAccess = impl::get_or_default_robustBufferAccess<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool geometryShader = impl::get_or_default_geometryShader<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool tessellationShader = impl::get_or_default_tessellationShader<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool depthBounds = impl::get_or_default_depthBounds<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool wideLines = impl::get_or_default_wideLines<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool largePoints = impl::get_or_default_largePoints<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool alphaToOne = impl::get_or_default_alphaToOne<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool pipelineStatisticsQuery = impl::get_or_default_pipelineStatisticsQuery<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool shaderCullDistance = impl::get_or_default_shaderCullDistance<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool shaderResourceResidency = impl::get_or_default_shaderResourceResidency<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool shaderResourceMinLod = impl::get_or_default_shaderResourceMinLod<device_capabilities>::value;

// VK 1.1
// VK 1.2
NBL_CONSTEXPR_STATIC_INLINE bool bufferDeviceAddressMultiDevice = impl::get_or_default_bufferDeviceAddressMultiDevice<device_capabilities>::value;

// VK 1.3
NBL_CONSTEXPR_STATIC_INLINE bool robustImageAccess = impl::get_or_default_robustImageAccess<device_capabilities>::value;

// Nabla Core Extensions
NBL_CONSTEXPR_STATIC_INLINE bool robustBufferAccess2 = impl::get_or_default_robustBufferAccess2<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool robustImageAccess2 = impl::get_or_default_robustImageAccess2<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool nullDescriptor = impl::get_or_default_nullDescriptor<device_capabilities>::value;

// Extensions
NBL_CONSTEXPR_STATIC_INLINE swapchainMode swapchainMode = impl::get_or_default_swapchainMode<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool shaderInfoAMD = impl::get_or_default_shaderInfoAMD<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool conditionalRendering = impl::get_or_default_conditionalRendering<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool inheritedConditionalRendering = impl::get_or_default_inheritedConditionalRendering<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool geometryShaderPassthrough = impl::get_or_default_geometryShaderPassthrough<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool hdrMetadata = impl::get_or_default_hdrMetadata<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool performanceCounterQueryPools = impl::get_or_default_performanceCounterQueryPools<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool performanceCounterMultipleQueryPools = impl::get_or_default_performanceCounterMultipleQueryPools<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool mixedAttachmentSamples = impl::get_or_default_mixedAttachmentSamples<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool accelerationStructure = impl::get_or_default_accelerationStructure<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool accelerationStructureIndirectBuild = impl::get_or_default_accelerationStructureIndirectBuild<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool accelerationStructureHostCommands = impl::get_or_default_accelerationStructureHostCommands<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool rayTracingPipeline = impl::get_or_default_rayTracingPipeline<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool rayTraversalPrimitiveCulling = impl::get_or_default_rayTraversalPrimitiveCulling<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool rayQuery = impl::get_or_default_rayQuery<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool representativeFragmentTest = impl::get_or_default_representativeFragmentTest<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool bufferMarkerAMD = impl::get_or_default_bufferMarkerAMD<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool fragmentDensityMap = impl::get_or_default_fragmentDensityMap<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool fragmentDensityMapDynamic = impl::get_or_default_fragmentDensityMapDynamic<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool fragmentDensityMapNonSubsampledImages = impl::get_or_default_fragmentDensityMapNonSubsampledImages<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool deviceCoherentMemory = impl::get_or_default_deviceCoherentMemory<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool memoryPriority = impl::get_or_default_memoryPriority<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool fragmentShaderSampleInterlock = impl::get_or_default_fragmentShaderSampleInterlock<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool fragmentShaderPixelInterlock = impl::get_or_default_fragmentShaderPixelInterlock<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool fragmentShaderShadingRateInterlock = impl::get_or_default_fragmentShaderShadingRateInterlock<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool rectangularLines = impl::get_or_default_rectangularLines<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool bresenhamLines = impl::get_or_default_bresenhamLines<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool smoothLines = impl::get_or_default_smoothLines<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool stippledRectangularLines = impl::get_or_default_stippledRectangularLines<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool stippledBresenhamLines = impl::get_or_default_stippledBresenhamLines<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool stippledSmoothLines = impl::get_or_default_stippledSmoothLines<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool indexTypeUint8 = impl::get_or_default_indexTypeUint8<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool deferredHostOperations = impl::get_or_default_deferredHostOperations<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool pipelineExecutableInfo = impl::get_or_default_pipelineExecutableInfo<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool deviceGeneratedCommands = impl::get_or_default_deviceGeneratedCommands<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool rayTracingMotionBlur = impl::get_or_default_rayTracingMotionBlur<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool rayTracingMotionBlurPipelineTraceRaysIndirect = impl::get_or_default_rayTracingMotionBlurPipelineTraceRaysIndirect<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool fragmentDensityMapDeferred = impl::get_or_default_fragmentDensityMapDeferred<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool rasterizationOrderColorAttachmentAccess = impl::get_or_default_rasterizationOrderColorAttachmentAccess<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool rasterizationOrderDepthAttachmentAccess = impl::get_or_default_rasterizationOrderDepthAttachmentAccess<device_capabilities>::value;
NBL_CONSTEXPR_STATIC_INLINE bool rasterizationOrderStencilAttachmentAccess = impl::get_or_default_rasterizationOrderStencilAttachmentAccess<device_capabilities>::value;

NBL_CONSTEXPR_STATIC_INLINE bool cooperativeMatrixRobustBufferAccess = impl::get_or_default_cooperativeMatrixRobustBufferAccess<device_capabilities>::value;

// Nabla
