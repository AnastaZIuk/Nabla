#ifndef _NBL_C_ARCHIVE_H_
#define _NBL_C_ARCHIVE_H_

#include <nbl/system/CFileArchive.h>

namespace @_NAMESPACE_@
{
	constexpr std::string_view pathPrefix = "@_PATH_PREFIX_@";
	constexpr bool hasPathPrefix(std::string_view str) { return str.find(pathPrefix) == 0ull; }

	class CArchive final : public system::CFileArchive
	{
		public:
			inline CArchive(system::path _path, system::logger_opt_smart_ptr&& logger)
				: system::CFileArchive(std::move(_path),std::move(logger), getItemList()) {}
			
		protected:
			file_buffer_t getFileBuffer(const system::IFileArchive::SListEntry* item) override
			{
					auto found = get_resource_runtime(item->pathRelativeToArchive.string());
					return { const_cast<uint8_t*>(found.first), found.second, nullptr };
			}

			core::vector<system::IFileArchive::SListEntry> getItemList()
			{
				static core::vector<system::IFileArchive::SListEntry> resources
				{
@_RESOURCES_INIT_LIST_@
				};
				
				return resources;
			}
	};
}

#endif // _NBL_C_ARCHIVE_H_


