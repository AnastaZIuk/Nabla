#ifndef float_t
#error Define float_t before including 
#endif
#ifndef TYPED_NUMBER
#error Define TYPED_NUMBER before including 
#endif

#define NAMESPACE_NAME NBL_CONCATENATE(twiddles_, float_t)  

namespace NAMESPACE_NAME {
    
    // -------------------------------------------- 64th roots of unity --------------------------------------------------------

    NBL_CONSTEXPR float_t low_real[64] = {
        TYPED_NUMBER(1),
        TYPED_NUMBER(0.9951847266721969),
        TYPED_NUMBER(0.9807852804032304),
        TYPED_NUMBER(0.9569403357322088),
        TYPED_NUMBER(0.9238795325112867),
        TYPED_NUMBER(0.881921264348355),
        TYPED_NUMBER(0.8314696123025452),
        TYPED_NUMBER(0.773010453362737),
        TYPED_NUMBER(0.7071067811865476),
        TYPED_NUMBER(0.6343932841636455),
        TYPED_NUMBER(0.5555702330196023),
        TYPED_NUMBER(0.4713967368259978),
        TYPED_NUMBER(0.3826834323650898),
        TYPED_NUMBER(0.2902846772544623),
        TYPED_NUMBER(0.1950903220161283),
        TYPED_NUMBER(0.09801714032956077),
        TYPED_NUMBER(0),
        TYPED_NUMBER(-0.09801714032956065),
        TYPED_NUMBER(-0.1950903220161282),
        TYPED_NUMBER(-0.2902846772544622),
        TYPED_NUMBER(-0.3826834323650897),
        TYPED_NUMBER(-0.4713967368259977),
        TYPED_NUMBER(-0.555570233019602),
        TYPED_NUMBER(-0.6343932841636454),
        TYPED_NUMBER(-0.7071067811865475),
        TYPED_NUMBER(-0.773010453362737),
        TYPED_NUMBER(-0.8314696123025453),
        TYPED_NUMBER(-0.8819212643483549),
        TYPED_NUMBER(-0.9238795325112867),
        TYPED_NUMBER(-0.9569403357322088),
        TYPED_NUMBER(-0.9807852804032304),
        TYPED_NUMBER(-0.9951847266721968),
        TYPED_NUMBER(-1),
        TYPED_NUMBER(-0.9951847266721969),
        TYPED_NUMBER(-0.9807852804032304),
        TYPED_NUMBER(-0.9569403357322089),
        TYPED_NUMBER(-0.9238795325112868),
        TYPED_NUMBER(-0.881921264348355),
        TYPED_NUMBER(-0.8314696123025455),
        TYPED_NUMBER(-0.7730104533627371),
        TYPED_NUMBER(-0.7071067811865477),
        TYPED_NUMBER(-0.6343932841636459),
        TYPED_NUMBER(-0.5555702330196022),
        TYPED_NUMBER(-0.4713967368259979),
        TYPED_NUMBER(-0.3826834323650903),
        TYPED_NUMBER(-0.2902846772544624),
        TYPED_NUMBER(-0.1950903220161287),
        TYPED_NUMBER(-0.09801714032956045),
        TYPED_NUMBER(0),
        TYPED_NUMBER(0.09801714032956009),
        TYPED_NUMBER(0.1950903220161283),
        TYPED_NUMBER(0.2902846772544621),
        TYPED_NUMBER(0.38268343236509),
        TYPED_NUMBER(0.4713967368259976),
        TYPED_NUMBER(0.5555702330196018),
        TYPED_NUMBER(0.6343932841636456),
        TYPED_NUMBER(0.7071067811865474),
        TYPED_NUMBER(0.7730104533627367),
        TYPED_NUMBER(0.8314696123025452),
        TYPED_NUMBER(0.8819212643483548),
        TYPED_NUMBER(0.9238795325112865),
        TYPED_NUMBER(0.9569403357322088),
        TYPED_NUMBER(0.9807852804032303),
        TYPED_NUMBER(0.9951847266721969)                                   
    }
    
    // This array is the same as above but right shifted a quarter of a turn (16 positions since it's a 64th primitive root)
    // Could reduce the memory used by half with this info, but I don't know if having it duplicated could potentially help avoid bank conflicts
    // when NOT doing subgroup-sized FFTs
    NBL_CONSTEXPR float_t low_imag[64] = {
        TYPED_NUMBER(0),
        TYPED_NUMBER(0.0980171403295606),
        TYPED_NUMBER(0.1950903220161282),
        TYPED_NUMBER(0.2902846772544623),
        TYPED_NUMBER(0.3826834323650898),
        TYPED_NUMBER(0.4713967368259976),
        TYPED_NUMBER(0.5555702330196022),
        TYPED_NUMBER(0.6343932841636455),
        TYPED_NUMBER(0.7071067811865475),
        TYPED_NUMBER(0.773010453362737),
        TYPED_NUMBER(0.8314696123025452),
        TYPED_NUMBER(0.8819212643483549),
        TYPED_NUMBER(0.9238795325112867),
        TYPED_NUMBER(0.9569403357322089),
        TYPED_NUMBER(0.9807852804032304),
        TYPED_NUMBER(0.9951847266721968),
        TYPED_NUMBER(1),
        TYPED_NUMBER(0.9951847266721969),
        TYPED_NUMBER(0.9807852804032304),
        TYPED_NUMBER(0.9569403357322089),
        TYPED_NUMBER(0.9238795325112867),
        TYPED_NUMBER(0.881921264348355),
        TYPED_NUMBER(0.8314696123025455),
        TYPED_NUMBER(0.7730104533627371),
        TYPED_NUMBER(0.7071067811865476),
        TYPED_NUMBER(0.6343932841636455),
        TYPED_NUMBER(0.5555702330196022),
        TYPED_NUMBER(0.4713967368259979),
        TYPED_NUMBER(0.3826834323650899),
        TYPED_NUMBER(0.2902846772544624),
        TYPED_NUMBER(0.1950903220161286),
        TYPED_NUMBER(0.09801714032956083),
        TYPED_NUMBER(0),
        TYPED_NUMBER(-0.09801714032956059),
        TYPED_NUMBER(-0.1950903220161284),
        TYPED_NUMBER(-0.2902846772544621),
        TYPED_NUMBER(-0.3826834323650897),
        TYPED_NUMBER(-0.4713967368259976),
        TYPED_NUMBER(-0.555570233019602),
        TYPED_NUMBER(-0.6343932841636453),
        TYPED_NUMBER(-0.7071067811865475),
        TYPED_NUMBER(-0.7730104533627367),
        TYPED_NUMBER(-0.8314696123025452),
        TYPED_NUMBER(-0.8819212643483549),
        TYPED_NUMBER(-0.9238795325112865),
        TYPED_NUMBER(-0.9569403357322088),
        TYPED_NUMBER(-0.9807852804032303),
        TYPED_NUMBER(-0.9951847266721969),
        TYPED_NUMBER(-1),
        TYPED_NUMBER(-0.9951847266721969),
        TYPED_NUMBER(-0.9807852804032304),
        TYPED_NUMBER(-0.9569403357322089),
        TYPED_NUMBER(-0.9238795325112866),
        TYPED_NUMBER(-0.881921264348355),
        TYPED_NUMBER(-0.8314696123025455),
        TYPED_NUMBER(-0.7730104533627369),
        TYPED_NUMBER(-0.7071067811865477),
        TYPED_NUMBER(-0.6343932841636459),
        TYPED_NUMBER(-0.5555702330196022),
        TYPED_NUMBER(-0.4713967368259979),
        TYPED_NUMBER(-0.3826834323650904),
        TYPED_NUMBER(-0.2902846772544625),
        TYPED_NUMBER(-0.1950903220161287),
        TYPED_NUMBER(-0.09801714032956051)                                  
    }                        

    // ---------------------------------------- 32th roots of the first 64th root of unity -----------------------------------
    
    NBL_CONSTEXPR float_t mid_real[32] = {
        TYPED_NUMBER(0.9999952938095762),
        TYPED_NUMBER(0.9801821359681174),
        TYPED_NUMBER(0.9227011283338786),
        TYPED_NUMBER(0.829761233794523),
        TYPED_NUMBER(0.704934080375905),
        TYPED_NUMBER(0.5530167055800276),
        TYPED_NUMBER(0.3798472089240511),
        TYPED_NUMBER(0.1920803970498924),
        TYPED_NUMBER(-0.003067956762966016),
        TYPED_NUMBER(-0.1980984107179536),
        TYPED_NUMBER(-0.3855160538439189),
        TYPED_NUMBER(-0.5581185312205558),
        TYPED_NUMBER(-0.7092728264388655),
        TYPED_NUMBER(-0.8331701647019132),
        TYPED_NUMBER(-0.9250492407826775),
        TYPED_NUMBER(-0.9813791933137544),
        TYPED_NUMBER(-0.9999952938095762),
        TYPED_NUMBER(-0.9801821359681174),
        TYPED_NUMBER(-0.9227011283338786),
        TYPED_NUMBER(-0.8297612337945233),
        TYPED_NUMBER(-0.7049340803759051),
        TYPED_NUMBER(-0.5530167055800272),
        TYPED_NUMBER(-0.3798472089240514),
        TYPED_NUMBER(-0.1920803970498925),
        TYPED_NUMBER(0.003067956762966115),
        TYPED_NUMBER(0.1980984107179539),
        TYPED_NUMBER(0.3855160538439194),
        TYPED_NUMBER(0.558118531220556),
        TYPED_NUMBER(0.7092728264388657),
        TYPED_NUMBER(0.8331701647019134),
        TYPED_NUMBER(0.9250492407826775),
        TYPED_NUMBER(0.9813791933137546)                                    
    }
    
    // Once again this is the same array as above, right shifted 8 positions 
    NBL_CONSTEXPR float_t mid_imag[32] = {
        TYPED_NUMBER(0.003067956762965976),
        TYPED_NUMBER(0.1980984107179536),
        TYPED_NUMBER(0.3855160538439188),
        TYPED_NUMBER(0.5581185312205561),
        TYPED_NUMBER(0.7092728264388656),
        TYPED_NUMBER(0.8331701647019132),
        TYPED_NUMBER(0.9250492407826776),
        TYPED_NUMBER(0.9813791933137546),
        TYPED_NUMBER(0.9999952938095762),
        TYPED_NUMBER(0.9801821359681174),
        TYPED_NUMBER(0.9227011283338785),
        TYPED_NUMBER(0.8297612337945233),
        TYPED_NUMBER(0.7049340803759051),
        TYPED_NUMBER(0.5530167055800276),
        TYPED_NUMBER(0.3798472089240514),
        TYPED_NUMBER(0.1920803970498929),
        TYPED_NUMBER(-0.003067956762965732),
        TYPED_NUMBER(-0.1980984107179536),
        TYPED_NUMBER(-0.3855160538439186),
        TYPED_NUMBER(-0.5581185312205557),
        TYPED_NUMBER(-0.7092728264388655),
        TYPED_NUMBER(-0.8331701647019134),
        TYPED_NUMBER(-0.9250492407826775),
        TYPED_NUMBER(-0.9813791933137546),
        TYPED_NUMBER(-0.9999952938095762),
        TYPED_NUMBER(-0.9801821359681173),
        TYPED_NUMBER(-0.9227011283338784),
        TYPED_NUMBER(-0.8297612337945232),
        TYPED_NUMBER(-0.7049340803759049),
        TYPED_NUMBER(-0.5530167055800272),
        TYPED_NUMBER(-0.3798472089240515),
        TYPED_NUMBER(-0.1920803970498926)                                   
    }

    // ---------------------------------------- 16th roots of the first of the previous roots -----------------------------------
    NBL_CONSTEXPR float_t high_real[16] = {
        TYPED_NUMBER(0.9999999816164293),
        TYPED_NUMBER(0.9238061368983954),
        TYPED_NUMBER(0.7069711821610654),
        TYPED_NUMBER(0.3825062736494384),
        TYPED_NUMBER(-0.0001917475973105512),
        TYPED_NUMBER(-0.3828605770105653),
        TYPED_NUMBER(-0.7072423542137347),
        TYPED_NUMBER(-0.9239528941557686),
        TYPED_NUMBER(-0.9999999816164293),
        TYPED_NUMBER(-0.9238061368983954),
        TYPED_NUMBER(-0.7069711821610654),
        TYPED_NUMBER(-0.3825062736494391),
        TYPED_NUMBER(0.0001917475973102067),
        TYPED_NUMBER(0.3828605770105654),
        TYPED_NUMBER(0.7072423542137343),
        TYPED_NUMBER(0.9239528941557683)    
    }

    // And again, same as above, right shifted by 4
    NBL_CONSTEXPR float_t high_imag[16] = {
        TYPED_NUMBER(0.0001917475973107033),
        TYPED_NUMBER(0.3828605770105654),
        TYPED_NUMBER(0.7072423542137346),
        TYPED_NUMBER(0.9239528941557686),
        TYPED_NUMBER(0.9999999816164293),
        TYPED_NUMBER(0.9238061368983955),
        TYPED_NUMBER(0.7069711821610654),
        TYPED_NUMBER(0.3825062736494382),
        TYPED_NUMBER(-0.000191747597310712),
        TYPED_NUMBER(-0.3828605770105654),
        TYPED_NUMBER(-0.7072423542137346),
        TYPED_NUMBER(-0.9239528941557683),
        TYPED_NUMBER(-0.9999999816164293),
        TYPED_NUMBER(-0.9238061368983954),
        TYPED_NUMBER(-0.7069711821610658),
        TYPED_NUMBER(-0.3825062736494392)    
    }               
}

template<>
complex_t<float_t> getHigh(uint32_t highIdx){
    complex_t<float_t> retVal = {NAMESPACE_NAME::high_real[highIdx], NAMESPACE_NAME::high_imag[highIdx]};
    return retVal;                                            
} 

template<>
complex_t<float_t> getMid(uint32_t midIdx){
    complex_t<float_t> retVal = {NAMESPACE_NAME::mid_real[midIdx], NAMESPACE_NAME::mid_imag[midIdx]};
    return retVal;                                            
} 

template<>
complex_t<float_t> getLow(uint32_t lowIdx){
    complex_t<float_t> retVal = {NAMESPACE_NAME::low_real[lowIdx], NAMESPACE_NAME::low_imag[lowIdx]};
    return retVal;                                            
}

#undef NAMESPACE_NAME