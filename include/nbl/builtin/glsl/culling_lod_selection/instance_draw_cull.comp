#version 440 core
layout(local_size_x=_NBL_GLSL_WORKGROUP_SIZE_) in;

#include </.glsl>

layout(set=INTERMEDIATE,binding=0) readonly restrict buffer LoDDrawcallOffsets
{
    uint data[];
} lodDrawcallOffsets;
layout(set=INTERMEDIATE,binding=1) readonly restrict buffer LoDDrawcallExclusiveCounts
{
    uint data[];
} lodDrawcallExclusiveCounts;


void main()
{
    const uint drawInstanceCount = lodDrawcallExclusiveCounts.data[nbl_glsl_culling_lod_selection_getInstanceCount()-1u];
    for (uint drawID=gl_GlobalInvocationID.x; drawID<drawInstanceCount; drawID++)
    {
        // upper_bound in lodDrawcallExclusiveCounts.data
        const uint instanceID = upper_bound(drawID)-1u;
        const uint drawLocalID = lodDrawcallOffsets.data[instanceID]+(drawID-lodDrawcallExclusiveCounts.data[instanceID]);
        const uint drawDWORDOffset = lodInfos.data[chosenLoD].offset+drawLocalID;
        // get AABB
        // cull
        bool visible = true;
        if (visible)
        {
            const uint appendIx = atomicAdd(unsortedDrawInstances.count,1u);
            uint instanceID = nbl_glsl_culling_lod_selection_drawCallInstanceCountIncr(drawDWORDOffset);

            const uint  baseInstanceDWORDOffset = drawDWORDOffset+4u;
            unsortedDrawInstances.data[appendIx] = uvec4(baseInstanceDWORDOffset,instanceID,instanceGUID,perViewPerInstanceID);
            nbl_glsl_culling_lod_selection_drawCallSetDWORD(baseInstanceDWORDOffset,0u);
        }
    }
}