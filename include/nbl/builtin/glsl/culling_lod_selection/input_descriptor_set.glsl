#ifndef _NBL_GLSL_CULLING_LOD_SELECTION_INPUT_DESCRIPTOR_SET_GLSL_INCLUDED_
#define _NBL_GLSL_CULLING_LOD_SELECTION_INPUT_DESCRIPTOR_SET_GLSL_INCLUDED_


#ifndef NBL_GLSL_CULLING_LOD_SELECTION_INPUT_DESCRIPTOR_SET
#define NBL_GLSL_CULLING_LOD_SELECTION_INPUT_DESCRIPTOR_SET 1
#endif

#include <nbl/builtin/glsl/utils/indirect_commands.glsl>
#include <nbl/builtin/glsl/culling_lod_selection/dispatch_indirect_params.glsl>
#ifndef NBL_GLSL_CULLING_LOD_SELECTION_DISPATCH_INDIRECT_DESCRIPTOR_BINDING
#define NBL_GLSL_CULLING_LOD_SELECTION_DISPATCH_INDIRECT_DESCRIPTOR_BINDING 0
layout(
    set = NBL_GLSL_CULLING_LOD_SELECTION_INPUT_DESCRIPTOR_SET,
    binding = NBL_GLSL_CULLING_LOD_SELECTION_DISPATCH_INDIRECT_DESCRIPTOR_BINDING
) restrict coherent buffer DispatchIndirect
{
    uint data[];
} dispatchIndirect;
#endif

#ifndef NBL_GLSL_CULLING_LOD_SELECTION_INSTANCE_LIST_DESCRIPTOR_BINDING
#define NBL_GLSL_CULLING_LOD_SELECTION_INSTANCE_LIST_DESCRIPTOR_BINDING 1
layout(
    set = NBL_GLSL_CULLING_LOD_SELECTION_INPUT_DESCRIPTOR_SET,
    binding = NBL_GLSL_CULLING_LOD_SELECTION_INSTANCE_LIST_DESCRIPTOR_BINDING
) restrict readonly buffer InstanceList
{
    uvec2 data[]; // <instanceGUID,lod_table_t>
} instanceList;
#endif

#ifndef NBL_GLSL_CULLING_LOD_SELECTION_INSTANCE_DRAWCALL_OFFSETS_DESCRIPTOR_BINDING
#define NBL_GLSL_CULLING_LOD_SELECTION_INSTANCE_DRAWCALL_OFFSETS_DESCRIPTOR_BINDING 2
layout(
    set = NBL_GLSL_CULLING_LOD_SELECTION_INPUT_DESCRIPTOR_SET,
    binding = NBL_GLSL_CULLING_LOD_SELECTION_INSTANCE_DRAWCALL_OFFSETS_DESCRIPTOR_BINDING
) NBL_GLSL_CULLING_LOD_SELECTION_INSTANCE_DRAWCALL_OFFSETS_DESCRIPTOR_QUALIFIERS buffer LoDDrawcallOffsets
{
    uint data[];
} lodDrawcallOffsets;
#endif

#ifndef NBL_GLSL_CULLING_LOD_SELECTION_INSTANCE_DRAWCALL_EXCLUSIVE_COUNTS_DESCRIPTOR_BINDING
#define NBL_GLSL_CULLING_LOD_SELECTION_INSTANCE_DRAWCALL_EXCLUSIVE_COUNTS_DESCRIPTOR_BINDING 3
layout(
    set = NBL_GLSL_CULLING_LOD_SELECTION_INPUT_DESCRIPTOR_SET,
    binding = NBL_GLSL_CULLING_LOD_SELECTION_INSTANCE_DRAWCALL_EXCLUSIVE_COUNTS_DESCRIPTOR_BINDING
) NBL_GLSL_CULLING_LOD_SELECTION_INSTANCE_DRAWCALL_EXCLUSIVE_COUNTS_DESCRIPTOR_QUALIFIERS buffer LoDDrawcallExclusiveCounts
{
    uint data[];
} lodDrawcallExclusiveCounts;
#endif

#ifndef NBL_GLSL_CULLING_LOD_SELECTION_PVS_INSTANCE_DRAWS_DESCRIPTOR_BINDING
#define NBL_GLSL_CULLING_LOD_SELECTION_PVS_INSTANCE_DRAWS_DESCRIPTOR_BINDING 4
layout(
    set = NBL_GLSL_CULLING_LOD_SELECTION_INPUT_DESCRIPTOR_SET,
    binding = NBL_GLSL_CULLING_LOD_SELECTION_PVS_INSTANCE_DRAWS_DESCRIPTOR_BINDING
) NBL_GLSL_CULLING_LOD_SELECTION_PVS_INSTANCE_DRAWS_DESCRIPTOR_QUALIFIERS buffer PVSInstanceDraws
{
    uint count;
    uint padding[3];
    uvec4 data[]; // <drawBaseInstanceDWORDOffset,instanceID,instanceGUID,perViewPerInstanceID>
} pvsInstanceDraws;
#endif

// TODO
//#include <nbl/builtin/glsl/scan/decriptors.glsl>

#ifndef NBL_GLSL_CULLING_LOD_SELECTION_DRAWCALLS_TO_SCAN_DESCRIPTOR_BINDING
#define NBL_GLSL_CULLING_LOD_SELECTION_DRAWCALLS_TO_SCAN_DESCRIPTOR_BINDING 6
layout(
    set = NBL_GLSL_CULLING_LOD_SELECTION_INPUT_DESCRIPTOR_SET,
    binding = NBL_GLSL_CULLING_LOD_SELECTION_DRAWCALLS_TO_SCAN_DESCRIPTOR_BINDING
) restrict readonly buffer DrawcallsToScan
{
    uint data[];
} drawcallsToScan;
#endif

#ifndef NBL_GLSL_CULLING_LOD_SELECTION_DRAW_COUNTS_TO_SCAN_DESCRIPTOR_BINDING
#define NBL_GLSL_CULLING_LOD_SELECTION_DRAW_COUNTS_TO_SCAN_DESCRIPTOR_BINDING 7
layout(
    set = NBL_GLSL_CULLING_LOD_SELECTION_INPUT_DESCRIPTOR_SET,
    binding = NBL_GLSL_CULLING_LOD_SELECTION_DRAW_COUNTS_TO_SCAN_DESCRIPTOR_BINDING
) restrict readonly buffer DrawCountsToScan
{
    uint data[];
} drawCountsToScan;
#endif

#endif