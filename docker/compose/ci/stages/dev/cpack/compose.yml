version: '3'

services:
  nabla.cpack.static.release:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.cpack.static.release.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.cpack.static.release.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.build.static.release:
        condition: service_completed_successfully
    volumes:
      - type: bind
        source: ../../../../../
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.cpack", "--libType", "static", "--config", "Release"]
  nabla.cpack.static.relwithdebinfo:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.cpack.static.relwithdebinfo.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.cpack.static.relwithdebinfo.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.build.static.relwithdebinfo:
        condition: service_completed_successfully
    volumes:
      - type: bind
        source: ../../../../../
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.cpack", "--libType", "static", "--config", "RelWithDebInfo"]
  nabla.cpack.static.debug:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.cpack.static.debug.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.cpack.static.debug.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.build.static.debug:
        condition: service_completed_successfully
    volumes:
      - type: bind
        source: ../../../../../
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.cpack", "--libType", "static", "--config", "Debug"]
  nabla.cpack.dynamic.release:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.cpack.dynamic.release.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.cpack.dynamic.release.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.build.dynamic.release:
        condition: service_completed_successfully
    volumes:
      - type: bind
        source: ../../../../../
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.cpack", "--libType", "dynamic", "--config", "Release"]
  nabla.cpack.dynamic.relwithdebinfo:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.cpack.dynamic.relwithdebinfo.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.cpack.dynamic.relwithdebinfo.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.build.dynamic.relwithdebinfo:
        condition: service_completed_successfully
    volumes:
      - type: bind
        source: ../../../../../
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.cpack", "--libType", "dynamic", "--config", "RelWithDebInfo"]
  nabla.cpack.dynamic.debug:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.cpack.dynamic.debug.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.cpack.dynamic.debug.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.build.dynamic.debug:
        condition: service_completed_successfully
    volumes:
      - type: bind
        source: ../../../../../
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.cpack", "--libType", "dynamic", "--config", "Debug"]
    
networks:
  nabla.network:
    external: true

volumes:
    ssh:
      external: true