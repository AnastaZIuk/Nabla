version: '3'

services:
  nabla.build.static.release:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.build.static.release.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.build.static.release.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    profiles: ["dev", "static", "dev.static", "dev.static.release"]
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.cmake.static.release:
        condition: service_completed_successfully
      nabla.kazoo.server:
        condition: service_healthy
    volumes:
      - type: bind
        source: ../../../../../
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.build", "--config", "Release", "--libType", "static"]
  nabla.build.static.relwithdebinfo:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.build.static.relwithdebinfo.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.build.static.relwithdebinfo.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    profiles: ["dev", "static", "dev.static", "dev.static.relwithdebinfo"]
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.cmake.static.relwithdebinfo:
        condition: service_completed_successfully
      nabla.kazoo.server:
        condition: service_healthy
    volumes:
      - type: bind
        source: ../../../../../
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.build", "--config", "RelWithDebInfo", "--libType", "static"]
  nabla.build.static.debug:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.build.static.debug.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.build.static.debug.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    profiles: ["dev", "static", "dev.static", "dev.static.debug"]
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.cmake.static.debug:
        condition: service_completed_successfully
      nabla.kazoo.server:
        condition: service_healthy
    volumes:
      - type: bind
        source: ../../../../../
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.build", "--config", "Debug", "--libType", "static"]
  nabla.build.dynamic.release:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.build.dynamic.release.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.build.dynamic.release.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    profiles: ["dev", "dynamic", "dev.dynamic", "dev.dynamic.release"]
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.cmake.dynamic.release:
        condition: service_completed_successfully
      nabla.kazoo.server:
        condition: service_healthy
    volumes:
      - type: bind
        source: ../../../../../
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.build", "--config", "Release", "--libType", "dynamic"]
  nabla.build.dynamic.relwithdebinfo:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.build.dynamic.relwithdebinfo.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.build.dynamic.relwithdebinfo.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    profiles: ["dev", "dynamic", "dev.dynamic", "dev.dynamic.relwithdebinfo"]
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.cmake.dynamic.relwithdebinfo:
        condition: service_completed_successfully
      nabla.kazoo.server:
        condition: service_healthy
    volumes:
      - type: bind
        source: ../../../../../
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.build", "--config", "RelWithDebInfo", "--libType", "dynamic"]
  nabla.build.dynamic.debug:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.build.dynamic.debug.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.build.dynamic.debug.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    profiles: ["dev", "dynamic", "dev.dynamic", "dev.dynamic.debug"]
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.cmake.dynamic.debug:
        condition: service_completed_successfully
      nabla.kazoo.server:
        condition: service_healthy
    volumes:
      - type: bind
        source: ../../../../../
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.build", "--config", "Debug", "--libType", "dynamic"]
    
networks:
  nabla.network:
    external: true