version: '3'

services:
  nabla.build.static.release:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.build.static.release.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.build.static.release.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.cmake.static:
        condition: service_completed_successfully
    volumes:
      - type: volume
        source: nabla.repository
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
      - type: volume
        source: ssh
        target: ${THIS_PROJECT_SSH_DIRECTORY}
      - type: bind
        source: ../../../../
        target: ${THIS_PROJECT_DOCKER_BIND_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.build", "--config", "Release", "--libType", "static"]
  nabla.build.static.relwithdebinfo:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.build.static.relwithdebinfo.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.build.static.relwithdebinfo.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.cmake.static:
        condition: service_completed_successfully
    volumes:
      - type: volume
        source: nabla.repository
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
      - type: volume
        source: ssh
        target: ${THIS_PROJECT_SSH_DIRECTORY}
      - type: bind
        source: ../../../../
        target: ${THIS_PROJECT_DOCKER_BIND_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.build", "--config", "RelWithDebInfo", "--libType", "static"]
  nabla.build.static.debug:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.build.static.debug.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.build.static.debug.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.cmake.static:
        condition: service_completed_successfully
    volumes:
      - type: volume
        source: nabla.repository
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
      - type: volume
        source: ssh
        target: ${THIS_PROJECT_SSH_DIRECTORY}
      - type: bind
        source: ../../../../
        target: ${THIS_PROJECT_DOCKER_BIND_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.build", "--config", "Debug", "--libType", "static"]
  nabla.build.dynamic.release:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.build.dynamic.release.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.build.dynamic.release.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.cmake.dynamic:
        condition: service_completed_successfully
    volumes:
      - type: volume
        source: nabla.repository
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
      - type: volume
        source: ssh
        target: ${THIS_PROJECT_SSH_DIRECTORY}
      - type: bind
        source: ../../../../
        target: ${THIS_PROJECT_DOCKER_BIND_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.build", "--config", "Release", "--libType", "dynamic"]
  nabla.build.dynamic.relwithdebinfo:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.build.dynamic.relwithdebinfo.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.build.dynamic.relwithdebinfo.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.cmake.dynamic:
        condition: service_completed_successfully
    volumes:
      - type: volume
        source: nabla.repository
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
      - type: volume
        source: ssh
        target: ${THIS_PROJECT_SSH_DIRECTORY}
      - type: bind
        source: ../../../../
        target: ${THIS_PROJECT_DOCKER_BIND_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.build", "--config", "RelWithDebInfo", "--libType", "dynamic"]
  nabla.build.dynamic.debug:
    image: ${THIS_PROJECT_BASE_IMAGE}
    container_name: dev.nabla.build.dynamic.debug.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    hostname: dev.nabla.build.dynamic.debug.${THIS_PROJECT_ARCH}.${THIS_PROJECT_PLATFORM}
    env_file: 
      - ../.env/platform/${THIS_PROJECT_PLATFORM}/.env
    networks:
      nabla.network:
    depends_on:
      nabla.cmake.dynamic:
        condition: service_completed_successfully
    volumes:
      - type: volume
        source: nabla.repository
        target: ${THIS_PROJECT_NABLA_DIRECTORY}
      - type: volume
        source: ssh
        target: ${THIS_PROJECT_SSH_DIRECTORY}
      - type: bind
        source: ../../../../
        target: ${THIS_PROJECT_DOCKER_BIND_DIRECTORY}
    entrypoint: ["ncpfmp.bat", "nbl.ci.dev.build", "--config", "Debug", "--libType", "dynamic"]
    
networks:
  nabla.network:
    external: true

volumes:
    nabla.repository:
        external: true
    ssh:
      external: true